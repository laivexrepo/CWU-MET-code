{"mode":"Blocks","workspace":"<xml xmlns=\"http://www.w3.org/1999/xhtml\"><variables><variable type=\"\" id=\"U`9aA+=)r+L1tzA.)-qi\" islocal=\"false\" iscloud=\"false\" arraylength=\"0\" arraywidth=\"0\">myVariable</variable></variables><block type=\"v5_events_when_started\" id=\".NsXwU_L.OuU1l7Sho$F\" x=\"110\" y=\"170\"><next><block type=\"v5_drivetrain_set_drive_velocity\" id=\"X!_!CNZF=Wqp}7=XoPQ?\"><field name=\"UNITS\">rpm</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"jaCXbrWw;jk%~HqKybDK\"><field name=\"NUM\">100</field></shadow></value><next><block type=\"v5_drivetrain_set_turn_velocity\" id=\"QDvE8w)vnb|mWm~LVT)_\"><field name=\"UNITS\">rpm</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"Fq*6C#9,mb+o-/$,`-S~\"><field name=\"NUM\">75</field></shadow></value><next><block type=\"v5_drivetrain_set_drive_stopping\" id=\"$iPjsI+#:Qm^)b,b*o$?\"><field name=\"MODE\">coast</field><next><block type=\"v5_looks_set_cursor\" id=\"?isrQCH_*V%r@.ZJH#%L\"><field name=\"TARGET\">Brain</field><value name=\"ROW\"><shadow type=\"math_whole_number\" id=\"?beTs6c%CCOar2G-EF8v\"><field name=\"NUM\">1</field></shadow></value><value name=\"COLUMN\"><shadow type=\"math_whole_number\" id=\"cyy$0kBqAL?1MW}JT~0{\"><field name=\"NUM\">1</field></shadow></value><next><block type=\"v5_looks_print\" id=\"G`:Fzmq)w-Y-D)vNxI!l\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">FALSE</field><value name=\"DATA\"><shadow type=\"text\" id=\"9^y^$|4i[1=Nd.4MFmUz\"><field name=\"TEXT\">Program Started.......</field></shadow></value></block></next></block></next></block></next></block></next></block></next></block><block type=\"v5_events_when_controller_button\" id=\"?yG4al-uhp~*;n@Pmr_H\" x=\"610\" y=\"170\"><field name=\"CONTROLLER\">Controller1</field><field name=\"BUTTON\">ButtonLeft</field><field name=\"EVENTTYPE\">pressed</field><next><block type=\"v5_drivetrain_turn_for\" id=\"e`u{xw6qkqi@_lMs~dgi\"><field name=\"TURNDIRECTION\">left</field><field name=\"anddontwait_mutator\">FALSE</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"D8!:3!9mvb,aX`j|dh1x\"><field name=\"NUM\">90</field></shadow></value><next><block type=\"v5_motion_stop_driving\" id=\"k{!j[r_H}EugmVVWI{HC\" disabled=\"true\"><next><block type=\"v5_looks_set_cursor\" id=\"mFrgJWq^@ca#*LW]5}Of\"><field name=\"TARGET\">Brain</field><value name=\"ROW\"><shadow type=\"math_whole_number\" id=\"*:p(rq,(TSoPHbw(x1:3\"><field name=\"NUM\">2</field></shadow></value><value name=\"COLUMN\"><shadow type=\"math_whole_number\" id=\"whElWl+P@1qO7I_Lh6=z\"><field name=\"NUM\">1</field></shadow></value><next><block type=\"v5_looks_print\" id=\"BMZ.J+jwW*4E7AytE%uz\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">FALSE</field><value name=\"DATA\"><shadow type=\"text\" id=\"BsQ3dxM1-$p!w_?res:*\"><field name=\"TEXT\">Turned Left...</field></shadow></value><next><block type=\"v5_looks_set_cursor\" id=\"$5:IB2!ZT^VGiZ_/^:).\"><field name=\"TARGET\">Brain</field><value name=\"ROW\"><shadow type=\"math_whole_number\" id=\"$~,@}G~:*XG^N-#P1cQZ\"><field name=\"NUM\">3</field></shadow></value><value name=\"COLUMN\"><shadow type=\"math_whole_number\" id=\"E]_-b@`AF+!:?5rFL;,Q\"><field name=\"NUM\">1</field></shadow></value><next><block type=\"v5_looks_print\" id=\"31e1jWOkhh|3ogdiKBob\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">FALSE</field><value name=\"DATA\"><shadow type=\"text\" id=\"l!OV!){Mg{D0E#+r$NC+\"><field name=\"TEXT\">Rotation: </field></shadow></value><next><block type=\"v5_looks_print\" id=\"^`)rtkLo_GmIP[(cot+y\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">FALSE</field><value name=\"DATA\"><shadow type=\"text\" id=\"`Y@gD;^g2qdp~LZ}bCbq\"><field name=\"TEXT\">Rotation: </field></shadow><block type=\"v5_sensing_drive_rotation\" id=\"oN{8q3y_toGUbXv.g:qN\"></block></value></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block><block type=\"v5_events_when_controller_button\" id=\"MNX5l_I$SmZ~E~DI8|ec\" x=\"610\" y=\"730\"><field name=\"CONTROLLER\">Controller1</field><field name=\"BUTTON\">ButtonRight</field><field name=\"EVENTTYPE\">pressed</field><next><block type=\"v5_drivetrain_turn_for\" id=\":wr9xOo[FV!RI}U3wjic\"><field name=\"TURNDIRECTION\">right</field><field name=\"anddontwait_mutator\">FALSE</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\".t]@FyO5wr]iKxY|S/G/\"><field name=\"NUM\">90</field></shadow></value><next><block type=\"v5_motion_stop_driving\" id=\"2}m%EBh]?..g%A54IIi3\" disabled=\"true\"><next><block type=\"v5_looks_set_cursor\" id=\"WZ7fk6CFzxa79[|,iD5M\"><field name=\"TARGET\">Brain</field><value name=\"ROW\"><shadow type=\"math_whole_number\" id=\"#7-p0FZ_E62+okcMcs(;\"><field name=\"NUM\">4</field></shadow></value><value name=\"COLUMN\"><shadow type=\"math_whole_number\" id=\"e8D8(b-Dt=8G97C|xljE\"><field name=\"NUM\">1</field></shadow></value><next><block type=\"v5_looks_print\" id=\"-J}UMI?dV!);ao?^NXqD\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">FALSE</field><value name=\"DATA\"><shadow type=\"text\" id=\"S7nkNiWZ0F36M`hP)$(l\"><field name=\"TEXT\">Turned Right...</field></shadow></value><next><block type=\"v5_looks_set_cursor\" id=\"F[dyv2KQ[/}o.XLFurV_\"><field name=\"TARGET\">Brain</field><value name=\"ROW\"><shadow type=\"math_whole_number\" id=\"E1ZUQPYlW0,^Hm-/,rR]\"><field name=\"NUM\">5</field></shadow></value><value name=\"COLUMN\"><shadow type=\"math_whole_number\" id=\"8LhNTZ2m?i_g,-8rs_V0\"><field name=\"NUM\">1</field></shadow></value><next><block type=\"v5_looks_print\" id=\"H2+vYX5#=58-+:yp}fI%\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">FALSE</field><value name=\"DATA\"><shadow type=\"text\" id=\"^Q;~t13n~h/;QW(L@poQ\"><field name=\"TEXT\">Rotation: </field></shadow></value><next><block type=\"v5_looks_print\" id=\"6|qlujoWD%`Ew^JqC2M5\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">FALSE</field><value name=\"DATA\"><shadow type=\"text\" id=\"GU[(bgW%~}[7tU;B,lr5\"><field name=\"TEXT\">Rotation: </field></shadow><block type=\"v5_sensing_drive_rotation\" id=\"B`qQO.!pb)+1xr`uDkCR\"></block></value></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></xml>","rconfig":[{"port":[],"name":"Controller1","customName":false,"deviceType":"Controller","deviceClass":"controller","setting":{"left":"","leftDir":"false","right":"","rightDir":"false","upDown":"","upDownDir":"false","xB":"","xBDir":"false","drive":"none","id":"primary"}},{"port":[9,10,1,2,6],"name":"Drivetrain","customName":false,"deviceType":"Drivetrain","deviceClass":"smartdrive","setting":{"type":"4-motor","wheelSize":"wheel4in","gear":"ratio18_1","gearRatio":"1:1","direction":"fwd","gyroType":"inertial","width":"365","unit":"mm","wheelbase":"140","wheelbaseUnit":"mm","xOffset":"0","xOffsetUnit":"mm","yOffset":"0","yOffsetUnit":"mm","thetaOffset":"180"}}],"slot":1,"platform":"V5","sdkVersion":"20211210.18.00.00","appVersion":"2.3.0","fileFormat":"1.0.1","icon":"","targetBrainGen":"First","cppStatus":"true","cpp":"// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START V5 MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END V5 MACROS\n\n\n// Robot configuration code.\ncontroller Controller1 = controller(primary);\nmotor leftMotorA = motor(PORT9, ratio18_1, false);\nmotor leftMotorB = motor(PORT10, ratio18_1, false);\nmotor_group LeftDriveSmart = motor_group(leftMotorA, leftMotorB);\nmotor rightMotorA = motor(PORT1, ratio18_1, true);\nmotor rightMotorB = motor(PORT2, ratio18_1, true);\nmotor_group RightDriveSmart = motor_group(rightMotorA, rightMotorB);\ninertial DrivetrainInertial = inertial(PORT6);\nsmartdrive Drivetrain = smartdrive(LeftDriveSmart, RightDriveSmart, DrivetrainInertial, 319.19, 320, 140, mm, 1);\n\n\nvoid calibrateDrivetrain() {\n  wait(200, msec);\n  Brain.Screen.print(\"Calibrating\");\n  Brain.Screen.newLine();\n  Brain.Screen.print(\"Inertial\");\n  DrivetrainInertial.calibrate();\n  while (DrivetrainInertial.isCalibrating()) {\n    wait(25, msec);\n  }\n\n  // Clears the screen and returns the cursor to row 1, column 1.\n  Brain.Screen.clearScreen();\n  Brain.Screen.setCursor(1, 1);\n}\n\n// Generated code.\n\n\n\n\n// define variable for remote controller enable/disable\nbool RemoteControlCodeEnabled = true;\n\n\n// Include the V5 Library\n#include \"vex.h\"\n  \n// Allows for easier use of the VEX Library\nusing namespace vex;\n\nint Brain_precision = 0, Console_precision = 0, Controller1_precision = 0;\n\nfloat myVariable;\n\n// \"when started\" hat block\nint whenStarted1() {\n  Drivetrain.setDriveVelocity(100.0, rpm);\n  Drivetrain.setTurnVelocity(75.0, rpm);\n  Drivetrain.setStopping(coast);\n  Brain.Screen.setCursor(1, 1);\n  Brain.Screen.print(\"Program Started.......\");\n  return 0;\n}\n\n// Used to find the format string for printing numbers with the\n// desired number of decimal places\nconst char* printToBrain_numberFormat() {\n  // look at the current precision setting to find the format string\n  switch(Brain_precision){\n    case 0:  return \"%.0f\"; // 0 decimal places (1)\n    case 1:  return \"%.1f\"; // 1 decimal place  (0.1)\n    case 2:  return \"%.2f\"; // 2 decimal places (0.01)\n    case 3:  return \"%.3f\"; // 3 decimal places (0.001)\n    default: return \"%f\"; // use the print system default for everthing else\n  }\n}\n\n// \"when Controller1 ButtonLeft pressed\" hat block\nvoid onevent_Controller1ButtonLeft_pressed_0() {\n  Drivetrain.turnFor(left, 90.0, degrees, true);\n  Brain.Screen.setCursor(2, 1);\n  Brain.Screen.print(\"Turned Left...\");\n  Brain.Screen.setCursor(3, 1);\n  Brain.Screen.print(\"Rotation: \");\n  Brain.Screen.print(printToBrain_numberFormat(), static_cast<float>(Drivetrain.rotation()));\n}\n\n// \"when Controller1 ButtonRight pressed\" hat block\nvoid onevent_Controller1ButtonRight_pressed_0() {\n  Drivetrain.turnFor(right, 90.0, degrees, true);\n  Brain.Screen.setCursor(4, 1);\n  Brain.Screen.print(\"Turned Right...\");\n  Brain.Screen.setCursor(5, 1);\n  Brain.Screen.print(\"Rotation: \");\n  Brain.Screen.print(printToBrain_numberFormat(), static_cast<float>(Drivetrain.rotation()));\n}\n\n\nint main() {\n  // Calibrate the Drivetrain\n  calibrateDrivetrain();\n\n  // register event handlers\n  Controller1.ButtonLeft.pressed(onevent_Controller1ButtonLeft_pressed_0);\n  Controller1.ButtonRight.pressed(onevent_Controller1ButtonRight_pressed_0);\n\n  wait(15, msec);\n  // post event registration\n\n  // set default print color to black\n  printf(\"\\033[30m\");\n\n  // wait for rotation sensor to fully initialize\n  wait(30, msec);\n\n  whenStarted1();\n}","target":"Physical"}