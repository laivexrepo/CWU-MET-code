{"mode":"Blocks","workspace":"<xml xmlns=\"http://www.w3.org/1999/xhtml\"><variables><variable type=\"\" id=\"U`9aA+=)r+L1tzA.)-qi\" islocal=\"false\" iscloud=\"false\" arraylength=\"0\" arraywidth=\"0\">myVariable</variable><variable type=\"\" id=\"^}}^P[J??jT5n)GOXc1-\" islocal=\"false\" iscloud=\"false\" arraylength=\"0\" arraywidth=\"0\">runIntake</variable><variable type=\"broadcast_msg\" id=\"$Vq8AKBuw!?BLgPcbt:Z\" islocal=\"false\" iscloud=\"false\" arraylength=\"0\" arraywidth=\"0\">message1</variable><variable type=\"broadcast_msg\" id=\"0`ahl!Tbqfd4bC42x)Fv\" islocal=\"false\" iscloud=\"false\" arraylength=\"0\" arraywidth=\"0\">startIntakeForward</variable><variable type=\"broadcast_msg\" id=\"s4izb-m^KPLh*}YpU?}A\" islocal=\"false\" iscloud=\"false\" arraylength=\"0\" arraywidth=\"0\">stopIntakeFrwd</variable></variables><block type=\"v5_events_when_started\" id=\".NsXwU_L.OuU1l7Sho$F\" x=\"70\" y=\"110\"><next><block type=\"v5_looks_set_cursor\" id=\"Tg{Kqb3c#LTw)T_r9S/s\"><field name=\"TARGET\">Brain</field><value name=\"ROW\"><shadow type=\"math_whole_number\" id=\"]L28s7FqBG)L;k`h+hN%\"><field name=\"NUM\">1</field></shadow></value><value name=\"COLUMN\"><shadow type=\"math_whole_number\" id=\"_-M=ND0ts8R#hE?z0wdc\"><field name=\"NUM\">1</field></shadow></value><next><block type=\"v5_looks_print\" id=\"CG(E,FnZ5|oX+9!#$P.M\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">FALSE</field><value name=\"DATA\"><shadow type=\"text\" id=\"hd3).#k9z:wl4!LUevyn\"><field name=\"TEXT\">Program Started........</field></shadow></value></block></next></block></next></block><block type=\"v5_events_when_autonomous\" id=\"?wR70!Qzm5L16/4$goY*\" x=\"850\" y=\"90\"><next><block type=\"v5_looks_set_cursor\" id=\"FaECX0cVEeZn%hNqH4Eu\"><field name=\"TARGET\">Brain</field><value name=\"ROW\"><shadow type=\"math_whole_number\" id=\"IX|+O-tl#O*t,V6C%NJ}\"><field name=\"NUM\">2</field></shadow></value><value name=\"COLUMN\"><shadow type=\"math_whole_number\" id=\".treg;uMSq0K[tItKALq\"><field name=\"NUM\">1</field></shadow></value><next><block type=\"v5_looks_print\" id=\"iv;8$c+]W698EO?]$2`L\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">FALSE</field><value name=\"DATA\"><shadow type=\"text\" id=\"BidDdgh@094L)%sGH.^;\"><field name=\"TEXT\">Autonomous Started........</field></shadow></value><next><block type=\"v5_drivetrain_set_drive_velocity\" id=\"Y,+aL719C4L}cfVX:3D(\"><field name=\"UNITS\">rpm</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"q#3LBxwvQmu9B_F%E]KV\"><field name=\"NUM\">100</field></shadow></value><next><block type=\"v5_drivetrain_set_drive_stopping\" id=\"dDN-Q)d8=@FZ@2tPY4S_\"><field name=\"MODE\">brake</field><next><block type=\"v5_motion_set_motor_velocity\" id=\"[-/{D0JoK!im=*fKJh^*\"><field name=\"MOTOR\">conveyorM</field><field name=\"UNITS\">rpm</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"W@9F)9G?H)LUO9uqrZZE\"><field name=\"NUM\">100</field></shadow></value><next><block type=\"v5_motion_set_motor_stopping\" id=\"Q%dw~8j?Y7-o@f`1|%qq\"><field name=\"MOTOR\">conveyorM</field><field name=\"MODE\">hold</field><next><block type=\"v5_motion_set_motor_velocity\" id=\"l|[2k?]F^C4s$,C30NM,\"><field name=\"MOTOR\">intakeMGP</field><field name=\"UNITS\">rpm</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"kF!f/MM?|D;-hN*ab@`J\"><field name=\"NUM\">200</field></shadow></value><next><block type=\"v5_motion_set_motor_stopping\" id=\"oUNR#iAj1/o$inX@795^\"><field name=\"MOTOR\">intakeMGP</field><field name=\"MODE\">coast</field><next><block type=\"v5_drivetrain_drive_for\" id=\"eUW1cWnkN9}W}?q-eWfw\"><field name=\"DIRECTION\">fwd</field><field name=\"UNITS\">mm</field><field name=\"anddontwait_mutator\">FALSE</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"Grrz]iOvLjtsYnx%sC#v\"><field name=\"NUM\">1000</field></shadow></value><next><block type=\"v5_motion_spin_for\" id=\"|Xc$h/.?3~pYfJ{S6[eS\"><field name=\"MOTOR\">intakeMGP</field><field name=\"DIRECTION\">fwd</field><field name=\"UNITS\">rev</field><field name=\"anddontwait_mutator\">TRUE</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"UyjgP51$d}Wj|yPoP(c(\"><field name=\"NUM\">20</field></shadow></value><next><block type=\"v5_drivetrain_drive_for\" id=\"I]?ns_,nJid)*+.v`4db\"><field name=\"DIRECTION\">fwd</field><field name=\"UNITS\">mm</field><field name=\"anddontwait_mutator\">FALSE</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"sas37ovWUB1J_N/ok9/L\"><field name=\"NUM\">200</field></shadow></value><next><block type=\"v5_motion_stop_driving\" id=\"Z6y?.JX.z*P]jes9=Dpk\"><next><block type=\"v5_motion_stop_motor\" id=\"gLq4s(4Q-`{eJc5t+%EC\"><field name=\"MOTOR\">intakeMGP</field><next><block type=\"v5_drivetrain_drive_for\" id=\"v9V=A}Xn%`qHzs6.zumX\"><field name=\"DIRECTION\">fwd</field><field name=\"UNITS\">mm</field><field name=\"anddontwait_mutator\">FALSE</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"Bog{5:YTRR)~j0qHW:b!\"><field name=\"NUM\">200</field></shadow></value></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block><block type=\"v5_events_when_autonomous\" id=\"_#hN0HR}5AcGyMoDntvz\" x=\"70\" y=\"370\"><next><block type=\"v5_looks_set_cursor\" id=\"B://i8fwTOW)F,Oj@bBk\"><field name=\"TARGET\">Brain</field><value name=\"ROW\"><shadow type=\"math_whole_number\" id=\"B-kanqW_+zIuxL|uJ%!,\"><field name=\"NUM\">2</field></shadow></value><value name=\"COLUMN\"><shadow type=\"math_whole_number\" id=\"0{7z%[X/mRVr%-_uE:V|\"><field name=\"NUM\">1</field></shadow></value><next><block type=\"v5_looks_print\" id=\"4Xu1q$@s0%pbBesZM+?i\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">FALSE</field><value name=\"DATA\"><shadow type=\"text\" id=\"]X/C0JS{ULstXk;smp!A\"><field name=\"TEXT\">Autonomous Started........</field></shadow></value><next><block type=\"v5_drivetrain_set_drive_velocity\" id=\"Ib{KOWsbnj1Lz2sX7|WR\"><field name=\"UNITS\">rpm</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"`BX|w1+Fd8sT93YxAAw_\"><field name=\"NUM\">100</field></shadow></value><next><block type=\"v5_drivetrain_set_drive_stopping\" id=\"#ljWKQ}WiBsuurBFkfUq\"><field name=\"MODE\">brake</field><next><block type=\"v5_motion_set_motor_velocity\" id=\"G2{a*Hcl+%Ep),8PGpbq\"><field name=\"MOTOR\">conveyorM</field><field name=\"UNITS\">rpm</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"*1[,*fMd~+.1]i]SOG*U\"><field name=\"NUM\">100</field></shadow></value><next><block type=\"v5_motion_set_motor_stopping\" id=\"$41IG__g-/B{PZ3oM`1p\"><field name=\"MOTOR\">conveyorM</field><field name=\"MODE\">hold</field><next><block type=\"v5_motion_set_motor_velocity\" id=\"S]Y@h!{.r32=wwe4,qhj\"><field name=\"MOTOR\">intakeMGP</field><field name=\"UNITS\">rpm</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"M}k6*CH`qW7siN?)8~jt\"><field name=\"NUM\">200</field></shadow></value><next><block type=\"v5_motion_set_motor_stopping\" id=\"Ue$[N~$,r-@`+XX(k!.V\"><field name=\"MOTOR\">intakeMGP</field><field name=\"MODE\">coast</field><next><block type=\"v5_drivetrain_drive_for\" id=\"N2z,epM_e+2_Mp8%RHfU\"><field name=\"DIRECTION\">fwd</field><field name=\"UNITS\">mm</field><field name=\"anddontwait_mutator\">FALSE</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"tkAai61aN}.Sv/jde5i3\"><field name=\"NUM\">1000</field></shadow></value><next><block type=\"v5_variables_set_variable\" id=\"F21`9?V2kKB[fn.@+ue/\"><field name=\"VARIABLE\" id=\"^}}^P[J??jT5n)GOXc1-\" variabletype=\"\">runIntake</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"m;vkj}O=O7s7d;9frG5c\"><field name=\"NUM\">0</field></shadow></value><next><block type=\"v5_events_broadcast\" id=\"7d8|MYK0GyrlTs`)O]I=\"><value name=\"BROADCAST_INPUT\"><shadow type=\"event_broadcast_menu\" id=\"5~jUI=TAECUL8`[7Uiyb\"><field name=\"BROADCAST_OPTION\" id=\"0`ahl!Tbqfd4bC42x)Fv\" variabletype=\"broadcast_msg\">startIntakeForward</field></shadow></value><next><block type=\"v5_drivetrain_drive_for\" id=\"JeX*HOA!XWn6+0rrj!x,\"><field name=\"DIRECTION\">fwd</field><field name=\"UNITS\">mm</field><field name=\"anddontwait_mutator\">FALSE</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"~WJZ@8xZF)/T:@I(s@F#\"><field name=\"NUM\">200</field></shadow></value><next><block type=\"v5_motion_stop_driving\" id=\"KRvQtO`B*TQ.osd,iYEl\"><next><block type=\"v5_events_broadcast\" id=\"8Rl3tNq{LhoqnR6YsYFS\"><value name=\"BROADCAST_INPUT\"><shadow type=\"event_broadcast_menu\" id=\"e*c*,]|`;zi3Sfb?5.^k\"><field name=\"BROADCAST_OPTION\" id=\"s4izb-m^KPLh*}YpU?}A\" variabletype=\"broadcast_msg\">stopIntakeFrwd</field></shadow></value><next><block type=\"v5_drivetrain_drive_for\" id=\"rh~iB#Rg-7*NzWLMJ4;8\"><field name=\"DIRECTION\">fwd</field><field name=\"UNITS\">mm</field><field name=\"anddontwait_mutator\">FALSE</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"qZe@mGm19pJm%)HpsoqR\"><field name=\"NUM\">200</field></shadow></value><next><block type=\"v5_motion_stop_driving\" id=\"ScS^!ntGr1-Tj~{J{%[{\"></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block><block type=\"v5_events_when_broadcasted\" id=\"t[K}YtvN%6Y{yC+`.Rk7\" x=\"650\" y=\"930\"><field name=\"BROADCAST_OPTION\" id=\"0`ahl!Tbqfd4bC42x)Fv\" variabletype=\"broadcast_msg\">startIntakeForward</field><next><block type=\"v5_variables_set_variable\" id=\".8Dj$8ckqN*(0;[ec|+v\"><field name=\"VARIABLE\" id=\"^}}^P[J??jT5n)GOXc1-\" variabletype=\"\">runIntake</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"y{7,2FpaCh}#$G!X[BQQ\"><field name=\"NUM\">1</field></shadow></value><next><block type=\"v5_motion_spin\" id=\"RZ=!U)V=^l|h%KyWoD/l\"><field name=\"MOTOR\">intakeMGP</field><field name=\"DIRECTION\">fwd</field><next><block type=\"v5_control_wait_until\" id=\"ttR_D`rn_kmn_Hvj=^-v\"><value name=\"CONDITION\"><block type=\"v5_operator_equal_to\" id=\"Nu__`gRmhO5^OMX|1@dC\"><value name=\"OPERAND1\"><shadow type=\"math_number\" id=\"K.ICuT,^5;e9AGD/m!.v\"><field name=\"NUM\"></field></shadow><block type=\"v5_variables_variable\" id=\"6`[}GiKOS#wMs0uSknUV\"><field name=\"VARIABLE\" id=\"^}}^P[J??jT5n)GOXc1-\" variabletype=\"\">runIntake</field></block></value><value name=\"OPERAND2\"><shadow type=\"math_number\" id=\"=O7js!#UATCNzaR9kLv$\"><field name=\"NUM\">0</field></shadow></value></block></value><next><block type=\"v5_motion_stop_motor\" id=\"f/G5OHQFDt!P,(26TQ19\"><field name=\"MOTOR\">intakeMGP</field></block></next></block></next></block></next></block></next></block><block type=\"v5_events_when_broadcasted\" id=\"@vC?*_P.EF?c-n7bp,zG\" x=\"1050\" y=\"930\"><field name=\"BROADCAST_OPTION\" id=\"s4izb-m^KPLh*}YpU?}A\" variabletype=\"broadcast_msg\">stopIntakeFrwd</field><next><block type=\"v5_variables_set_variable\" id=\"m:Of(kAbps_^k4)AV]a~\"><field name=\"VARIABLE\" id=\"^}}^P[J??jT5n)GOXc1-\" variabletype=\"\">runIntake</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"HS,0enW-$rj.p?pZdn^K\"><field name=\"NUM\">0</field></shadow></value><next><block type=\"v5_motion_stop_motor\" id=\"L$=tgpAkncY#D}hlMSck\"><field name=\"MOTOR\">intakeMGP</field></block></next></block></next></block></xml>","rconfig":[{"port":[1,10,4],"name":"Drivetrain","customName":false,"deviceType":"Drivetrain","deviceClass":"smartdrive","setting":{"type":"2-motor","wheelSize":"wheel4in","gear":"ratio18_1","gearRatio":"1:1","direction":"fwd","gyroType":"inertial","width":"295","unit":"mm","wheelbase":"40","wheelbaseUnit":"mm","xOffset":"0","xOffsetUnit":"mm","yOffset":"0","yOffsetUnit":"mm","thetaOffset":"180"},"triportSourcePort":null},{"port":[],"name":"Controller1","customName":false,"deviceType":"Controller","deviceClass":"controller","setting":{"left":"","leftDir":"false","right":"","rightDir":"false","upDown":"","upDownDir":"false","xB":"","xBDir":"false","drive":"tank","id":"primary"},"triportSourcePort":22},{"port":[15,16],"name":"intakeMGP","customName":true,"deviceType":"MotorGroup","deviceClass":"motor_group","setting":{"fwd":"forward","rev":"reverse","gear":"ratio18_1","motor_a_reversed":"false","motor_b_reversed":"false"},"triportSourcePort":22},{"port":[19],"name":"conveyorM","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1","id":"partner"},"triportSourcePort":22}],"slot":0,"platform":"V5","sdkVersion":"20220726.10.00.00","appVersion":"2.4.0","minVersion":"2.4.0","fileFormat":"1.0.1","icon":"","targetBrainGen":"First","cppStatus":"true","cpp":"// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START V5 MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END V5 MACROS\n\n\n// Robot configuration code.\nmotor LeftDriveSmart = motor(PORT1, ratio18_1, false);\nmotor RightDriveSmart = motor(PORT10, ratio18_1, true);\ninertial DrivetrainInertial = inertial(PORT4);\nsmartdrive Drivetrain = smartdrive(LeftDriveSmart, RightDriveSmart, DrivetrainInertial, 319.19, 320, 40, mm, 1);\n\ncontroller Controller1 = controller(primary);\nmotor intakeMGPMotorA = motor(PORT15, ratio18_1, false);\nmotor intakeMGPMotorB = motor(PORT16, ratio18_1, false);\nmotor_group intakeMGP = motor_group(intakeMGPMotorA, intakeMGPMotorB);\n\nmotor conveyorM = motor(PORT19, ratio18_1, false);\n\n\nvoid calibrateDrivetrain() {\n  wait(200, msec);\n  Brain.Screen.print(\"Calibrating\");\n  Brain.Screen.newLine();\n  Brain.Screen.print(\"Inertial\");\n  DrivetrainInertial.calibrate();\n  while (DrivetrainInertial.isCalibrating()) {\n    wait(25, msec);\n  }\n\n  // Clears the screen and returns the cursor to row 1, column 1.\n  Brain.Screen.clearScreen();\n  Brain.Screen.setCursor(1, 1);\n}\n\n\n\n// Generated code.\n\n\n\n// define variable for remote controller enable/disable\nbool RemoteControlCodeEnabled = true;\n// define variables used for controlling motors based on controller inputs\nbool DrivetrainLNeedsToBeStopped_Controller1 = true;\nbool DrivetrainRNeedsToBeStopped_Controller1 = true;\n\n// define a task that will handle monitoring inputs from Controller1\nint rc_auto_loop_function_Controller1() {\n  // process the controller input every 20 milliseconds\n  // update the motors based on the input values\n  while(true) {\n    if(RemoteControlCodeEnabled) {\n      // stop the motors if the brain is calibrating\n      if (DrivetrainInertial.isCalibrating()) {\n        LeftDriveSmart.stop();\n        RightDriveSmart.stop();\n        while (DrivetrainInertial.isCalibrating()) {\n          wait(25, msec);\n        }\n      }\n      \n      // calculate the drivetrain motor velocities from the controller joystick axies\n      // left = Axis3\n      // right = Axis2\n      int drivetrainLeftSideSpeed = Controller1.Axis3.position();\n      int drivetrainRightSideSpeed = Controller1.Axis2.position();\n      \n      // check if the value is inside of the deadband range\n      if (drivetrainLeftSideSpeed < 5 && drivetrainLeftSideSpeed > -5) {\n        // check if the left motor has already been stopped\n        if (DrivetrainLNeedsToBeStopped_Controller1) {\n          // stop the left drive motor\n          LeftDriveSmart.stop();\n          // tell the code that the left motor has been stopped\n          DrivetrainLNeedsToBeStopped_Controller1 = false;\n        }\n      } else {\n        // reset the toggle so that the deadband code knows to stop the left motor nexttime the input is in the deadband range\n        DrivetrainLNeedsToBeStopped_Controller1 = true;\n      }\n      // check if the value is inside of the deadband range\n      if (drivetrainRightSideSpeed < 5 && drivetrainRightSideSpeed > -5) {\n        // check if the right motor has already been stopped\n        if (DrivetrainRNeedsToBeStopped_Controller1) {\n          // stop the right drive motor\n          RightDriveSmart.stop();\n          // tell the code that the right motor has been stopped\n          DrivetrainRNeedsToBeStopped_Controller1 = false;\n        }\n      } else {\n        // reset the toggle so that the deadband code knows to stop the right motor next time the input is in the deadband range\n        DrivetrainRNeedsToBeStopped_Controller1 = true;\n      }\n      \n      // only tell the left drive motor to spin if the values are not in the deadband range\n      if (DrivetrainLNeedsToBeStopped_Controller1) {\n        LeftDriveSmart.setVelocity(drivetrainLeftSideSpeed, percent);\n        LeftDriveSmart.spin(forward);\n      }\n      // only tell the right drive motor to spin if the values are not in the deadband range\n      if (DrivetrainRNeedsToBeStopped_Controller1) {\n        RightDriveSmart.setVelocity(drivetrainRightSideSpeed, percent);\n        RightDriveSmart.spin(forward);\n      }\n    }\n    // wait before repeating the process\n    wait(20, msec);\n  }\n  return 0;\n}\n\ntask rc_auto_loop_task_Controller1(rc_auto_loop_function_Controller1);\n\n// Include the V5 Library\n#include \"vex.h\"\n  \n// Allows for easier use of the VEX Library\nusing namespace vex;\n\ncompetition Competition;\n\nint Brain_precision = 0, Console_precision = 0, Controller1_precision = 0;\n\nfloat myVariable, runIntake;\n\nevent message1 = event();\nevent startIntakeForward = event();\nevent stopIntakeFrwd = event();\n\n// \"when started\" hat block\nint whenStarted1() {\n  Brain.Screen.setCursor(1, 1);\n  Brain.Screen.print(\"Program Started........\");\n  return 0;\n}\n\n// \"when autonomous\" hat block\nint onauton_autonomous_0() {\n  Brain.Screen.setCursor(2, 1);\n  Brain.Screen.print(\"Autonomous Started........\");\n  Drivetrain.setDriveVelocity(100.0, rpm);\n  Drivetrain.setStopping(brake);\n  conveyorM.setVelocity(100.0, rpm);\n  conveyorM.setStopping(hold);\n  intakeMGP.setVelocity(200.0, rpm);\n  intakeMGP.setStopping(coast);\n  Drivetrain.driveFor(forward, 1000.0, mm, true);\n  intakeMGP.spinFor(forward, 20.0, turns, false);\n  Drivetrain.driveFor(forward, 200.0, mm, true);\n  Drivetrain.stop();\n  intakeMGP.stop();\n  Drivetrain.driveFor(forward, 200.0, mm, true);\n  return 0;\n}\n\n// \"when autonomous\" hat block\nint onauton_autonomous_1() {\n  Brain.Screen.setCursor(2, 1);\n  Brain.Screen.print(\"Autonomous Started........\");\n  Drivetrain.setDriveVelocity(100.0, rpm);\n  Drivetrain.setStopping(brake);\n  conveyorM.setVelocity(100.0, rpm);\n  conveyorM.setStopping(hold);\n  intakeMGP.setVelocity(200.0, rpm);\n  intakeMGP.setStopping(coast);\n  Drivetrain.driveFor(forward, 1000.0, mm, true);\n  runIntake = 0.0;\n  startIntakeForward.broadcast();\n  Drivetrain.driveFor(forward, 200.0, mm, true);\n  Drivetrain.stop();\n  stopIntakeFrwd.broadcast();\n  Drivetrain.driveFor(forward, 200.0, mm, true);\n  Drivetrain.stop();\n  return 0;\n}\n\n// \"when I receive startIntakeForward\" hat block\nvoid onevent_startIntakeForward_0() {\n  runIntake = 1.0;\n  intakeMGP.spin(forward);\n  waitUntil((runIntake == 0.0));\n  intakeMGP.stop();\n}\n\n// \"when I receive stopIntakeFrwd\" hat block\nvoid onevent_stopIntakeFrwd_0() {\n  runIntake = 0.0;\n  intakeMGP.stop();\n}\n\nvoid VEXcode_driver_task() {\n  // Start the driver control tasks....\n\n  while(Competition.isDriverControl() && Competition.isEnabled()) {this_thread::sleep_for(10);}\n\n  return;\n}\n\nvoid VEXcode_auton_task() {\n  // Start the auton control tasks....\n  vex::task auto0(onauton_autonomous_0);\nvex::task auto1(onauton_autonomous_1);\n  while(Competition.isAutonomous() && Competition.isEnabled()) {this_thread::sleep_for(10);}\n  auto0.stop();\nauto1.stop();\n  return;\n}\n\n\n\nint main() {\n  vex::competition::bStopTasksBetweenModes = false;\n  Competition.autonomous(VEXcode_auton_task);\n  Competition.drivercontrol(VEXcode_driver_task);\n\n  // Calibrate the Drivetrain\n  calibrateDrivetrain();\n\n  // register event handlers\n  startIntakeForward(onevent_startIntakeForward_0);\n  stopIntakeFrwd(onevent_stopIntakeFrwd_0);\n\n  wait(15, msec);\n  // post event registration\n\n  // set default print color to black\n  printf(\"\\033[30m\");\n\n  // wait for rotation sensor to fully initialize\n  wait(30, msec);\n\n  whenStarted1();\n}","target":"Physical"}