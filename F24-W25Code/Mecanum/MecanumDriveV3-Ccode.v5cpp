{"mode":"Text","hardwareTarget":"brain","textContent":"#pragma region VEXcode Generated Robot Configuration\n// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START V5 MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END V5 MACROS\n\n\n// Robot configuration code.\ncontroller Controller1 = controller(primary);\nmotor LmFront = motor(PORT10, ratio18_1, false);\n\nmotor LmBack = motor(PORT9, ratio18_1, false);\n\nmotor RmFront = motor(PORT1, ratio18_1, true);\n\nmotor RmBack = motor(PORT2, ratio18_1, true);\n\n\n\n// generating and setting random seed\nvoid initializeRandomSeed(){\n  int systemTime = Brain.Timer.systemHighResolution();\n  double batteryCurrent = Brain.Battery.current();\n  double batteryVoltage = Brain.Battery.voltage(voltageUnits::mV);\n\n  // Combine these values into a single integer\n  int seed = int(batteryVoltage + batteryCurrent * 100) + systemTime;\n\n  // Set the seed\n  srand(seed);\n}\n\n\n\nvoid vexcodeInit() {\n\n  //Initializing random seed.\n  initializeRandomSeed(); \n}\n\n\n// Helper to make playing sounds from the V5 in VEXcode easier and\n// keeps the code cleaner by making it clear what is happening.\nvoid playVexcodeSound(const char *soundName) {\n  printf(\"VEXPlaySound:%s\\n\", soundName);\n  wait(5, msec);\n}\n\n\n\n// define variable for remote controller enable/disable\nbool RemoteControlCodeEnabled = true;\n\n#pragma endregion VEXcode Generated Robot Configuration\n\n// Include the V5 Library\n#include \"vex.h\"\n  \n// Allows for easier use of the VEX Library\nusing namespace vex;\n\nfloat myVariable;\n\n// \"when started\" hat block\nint whenStarted1() {\n  RemoteControlCodeEnabled = true;\n  return 0;\n}\n\n// \"when Controller1 ButtonB pressed\" hat block\nvoid onevent_Controller1ButtonB_pressed_0() {\n  // Joystick Control\n  while (true) {\n    LmFront.setVelocity((Controller1.Axis3.position() + (Controller1.Axis4.position() + Controller1.Axis1.position())), percent);\n    LmFront.spin(forward);\n    RmFront.setVelocity((Controller1.Axis3.position() - (Controller1.Axis4.position() + Controller1.Axis1.position())), percent);\n    RmFront.spin(forward);\n    LmBack.setVelocity((Controller1.Axis3.position() + (Controller1.Axis4.position() - Controller1.Axis1.position())), percent);\n    LmBack.spin(forward);\n    RmBack.setVelocity((Controller1.Axis3.position() - (Controller1.Axis4.position() - Controller1.Axis1.position())), percent);\n    RmBack.spin(forward);\n  wait(5, msec);\n  }\n}\n\n// \"when Controller1 ButtonLeft pressed\" hat block\nvoid onevent_Controller1ButtonLeft_pressed_0() {\n  // Crawl Left\n  LmFront.setVelocity(50.0, percent);\n  LmFront.spin(forward);\n  LmBack.setVelocity(50.0, percent);\n  LmBack.spin(reverse);\n  RmFront.setVelocity(-50.0, percent);\n  RmFront.spin(forward);\n  RmBack.setVelocity(-50.0, percent);\n  RmBack.spin(reverse);\n}\n\n// \"when Controller1 ButtonRight pressed\" hat block\nvoid onevent_Controller1ButtonRight_pressed_0() {\n  // Crawl Right\n  LmFront.setVelocity(-50.0, percent);\n  LmFront.spin(forward);\n  LmBack.setVelocity(-50.0, percent);\n  LmBack.spin(reverse);\n  RmFront.setVelocity(50.0, percent);\n  RmFront.spin(forward);\n  RmBack.setVelocity(50.0, percent);\n  RmBack.spin(reverse);\n}\n\n// \"when Controller1 ButtonA pressed\" hat block\nvoid onevent_Controller1ButtonA_pressed_0() {\n  // Turn Right\n  LmFront.setVelocity(-50.0, percent);\n  LmFront.spin(forward);\n  LmBack.setVelocity(-50.0, percent);\n  LmBack.spin(forward);\n  RmFront.setVelocity(50.0, percent);\n  RmFront.spin(forward);\n  RmBack.setVelocity(50.0, percent);\n  RmBack.spin(forward);\n}\n\n// \"when Controller1 ButtonX pressed\" hat block\nvoid onevent_Controller1ButtonX_pressed_0() {\n  LmFront.stop();\n  LmBack.stop();\n  RmFront.stop();\n  RmBack.stop();\n}\n\n// \"when Controller1 ButtonUp pressed\" hat block\nvoid onevent_Controller1ButtonUp_pressed_0() {\n  // Drive Forward\n  LmFront.setVelocity(50.0, percent);\n  LmFront.spin(forward);\n  LmBack.setVelocity(50.0, percent);\n  LmBack.spin(forward);\n  RmFront.setVelocity(50.0, percent);\n  RmFront.spin(forward);\n  RmBack.setVelocity(50.0, percent);\n  RmBack.spin(forward);\n}\n\n// \"when Controller1 ButtonDown pressed\" hat block\nvoid onevent_Controller1ButtonDown_pressed_0() {\n  // Drive backwards\n  LmFront.setVelocity(-50.0, percent);\n  LmFront.spin(forward);\n  LmBack.setVelocity(-50.0, percent);\n  LmBack.spin(forward);\n  RmFront.setVelocity(-50.0, percent);\n  RmFront.spin(forward);\n  RmBack.setVelocity(-50.0, percent);\n  RmBack.spin(forward);\n}\n\n// \"when Controller1 ButtonY pressed\" hat block\nvoid onevent_Controller1ButtonY_pressed_0() {\n  // Turn Left\n  LmFront.setVelocity(50.0, percent);\n  LmFront.spin(forward);\n  LmBack.setVelocity(50.0, percent);\n  LmBack.spin(forward);\n  RmFront.setVelocity(-50.0, percent);\n  RmFront.spin(forward);\n  RmBack.setVelocity(-50.0, percent);\n  RmBack.spin(forward);\n}\n\n\nint main() {\n  // Initializing Robot Configuration. DO NOT REMOVE!\n  vexcodeInit();\n\n  // register event handlers\n  Controller1.ButtonB.pressed(onevent_Controller1ButtonB_pressed_0);\n  Controller1.ButtonLeft.pressed(onevent_Controller1ButtonLeft_pressed_0);\n  Controller1.ButtonRight.pressed(onevent_Controller1ButtonRight_pressed_0);\n  Controller1.ButtonA.pressed(onevent_Controller1ButtonA_pressed_0);\n  Controller1.ButtonX.pressed(onevent_Controller1ButtonX_pressed_0);\n  Controller1.ButtonUp.pressed(onevent_Controller1ButtonUp_pressed_0);\n  Controller1.ButtonDown.pressed(onevent_Controller1ButtonDown_pressed_0);\n  Controller1.ButtonY.pressed(onevent_Controller1ButtonY_pressed_0);\n\n  wait(15, msec);\n  whenStarted1();\n}","textLanguage":"cpp","robotConfig":[{"port":[],"name":"Controller1","customName":false,"deviceType":"Controller","deviceClass":"controller","setting":{"left":"","leftDir":"false","right":"","rightDir":"false","upDown":"","upDownDir":"false","xB":"","xBDir":"false","drive":"none","id":"primary"},"triportSourcePort":22},{"port":[10],"name":"LmFront","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1"},"triportSourcePort":22},{"port":[9],"name":"LmBack","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1"},"triportSourcePort":22},{"port":[1],"name":"RmFront","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"true","fwd":"forward","rev":"reverse","gear":"ratio18_1"},"triportSourcePort":22},{"port":[2],"name":"RmBack","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"true","fwd":"forward","rev":"reverse","gear":"ratio18_1"},"triportSourcePort":22}],"slot":0,"platform":"V5","sdkVersion":"20240802.15.00.00","appVersion":"4.0.5","minVersion":"3.1.0","fileFormat":"2.0.0","targetBrainGen":"First","v5Sounds":[{"name":"game over","url":"static/sounds/mixkit-arcade-retro-game-over-213.wav"}],"v5SoundsEnabled":false,"target":"Physical"}