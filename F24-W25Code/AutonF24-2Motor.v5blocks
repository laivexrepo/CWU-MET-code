{"mode":"Blocks","hardwareTarget":"brain","workspace":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables><variable id=\"U`9aA+=)r+L1tzA.)-qi\">myVariable</variable><variable id=\"SJXEmi_Sij?P5=TCZkU$\">speedForward</variable><variable id=\"%-lQSXz$vJwI0QRbpF%w\">speedPlusState</variable><variable id=\"}In0X#;wgnmiI_9A;cyB\">speedFactor</variable><variable id=\"rJ}B+fi6ka9%$6fM-5Se\">speedScale</variable><variable type=\"broadcast_msg\" id=\"`hX-#C~IgW!6m*}{88U$\">message1</variable><variable type=\"broadcast_msg\" id=\"JUEnjt3LtA^OwIG;jlv8\">AUTONOMOUS</variable><variable type=\"broadcast_msg\" id=\"Uy:T%!B5r~Hm`r0];FFP\">DRIVER</variable></variables><comment id=\"J%,7[@@.#Igh%|SB98@!\" x=\"31\" y=\"-1290\" h=\"323\" w=\"813\">Competition Template Sample Program \nProgram Name: AutonF24-2Motor\n\nVersion 1.0 28/09/2024 BCN\nCreate Date: 28/09/2024\n\nRevision Date: \n\nPort Defintitions: \n      LM drive port#10.  RM drive port # 1.   \n      GYRO port #5\n      grabberM port#18                               // Open/Closes grabber / manipulator\n\n\nThe program uses the Drivebase Object for controlling the motors and itÂ´s movement</comment><comment id=\"iBbgnyN+p6ZW4ZJNn=pl\" x=\"37\" y=\"-918\" h=\"209\" w=\"542\">When Started - this code is run immediately on start of program - same is initialize() function in C++ template.\n\nThings to note: it will set the 0 position claw open/close at startup, all subsequent movements are calculated from this 0 degree reference point when doing autonomous movements.\n\nNote: You can reset the 0 degree point for each at any point by adding a \"set &lt;motor&gt; position to 0 degrees block\" - which will then make it the reference 0 degree mark for future movements.  This ONLY works in the autonomous code so be careful!</comment><comment id=\"%6Mmq^=FN)d|jql|`1;u\" x=\"745\" y=\"-926\" h=\"219\" w=\"524\">When Autonomous - this code is triggered when field control issues autonomous start command.\n\nThis code can also be triggered by enabling broadcast autonomous and using the when I recieve AUTONOMOUS start block versus the the when autonmous block is used which is triggered by field control</comment><comment id=\"$TL3SW6^vjujmjlBE/;^\" x=\"1536\" y=\"-901\" h=\"196\" w=\"502\">When Driver Control - in the AUTONOMOUS template this functionality is disabled, the REMOTE is disabled.</comment><block type=\"v5_events_when_started\" id=\".NsXwU_L.OuU1l7Sho$F\" x=\"30\" y=\"-670\"><next><block type=\"v5_looks_set_cursor\" id=\".imJajfVP,GpC1$hYEDU\"><field name=\"TARGET\">Brain</field><value name=\"ROW\"><shadow type=\"math_whole_number\" id=\"5H3x(g^H12g50/5mH(z9\"><field name=\"NUM\">1</field></shadow></value><value name=\"COLUMN\"><shadow type=\"math_whole_number\" id=\"Nl2^L=g}EB-9/h-y?N3{\"><field name=\"NUM\">1</field></shadow></value><next><block type=\"v5_looks_print\" id=\"VqL}*{:YOV9}WargEb6X\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">true</field><value name=\"DATA\"><shadow type=\"text\" id=\"m,$0m!:S41`cu!{KdI*O\"><field name=\"TEXT\">Program Started.....</field></shadow></value><next><block type=\"v5_sensing_controller_is_enabled\" id=\"J%Rd_CebAj!#``njnJ8D\"><field name=\"isEnabled\">false</field><next><block type=\"v5_other_comment\" id=\"m|l0NGJTa#3WUM[[D9oc\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"+`_t{-Hk3C#pbb_k3d]C\"><field name=\"comment\">When testing broadbast blocks should be enabled to</field></shadow></value><next><block type=\"v5_other_comment\" id=\"Y/eS2}=l-XqprTMMtd-4\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"d@!(Ku%Ct`{*OXpug3/B\"><field name=\"comment\">to trigger autnomous followd by driver - it is also possible</field></shadow></value><next><block type=\"v5_other_comment\" id=\"D5^0f6R5Zf=0=knIYPKy\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"NHfz;zvQq*swN8VSfv*L\"><field name=\"comment\">to just enable driver by disabling broadcast autonomous block</field></shadow></value><next><block type=\"v5_events_broadcast_and_wait\" id=\"ztpn#cdN=].3SkRacuao\"><field name=\"BROADCAST_OPTION\" id=\"JUEnjt3LtA^OwIG;jlv8\" variabletype=\"broadcast_msg\">AUTONOMOUS</field></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block><block type=\"v5_events_when_broadcasted\" id=\"mkxeRa@[X`ZdQd,y[$u5\" x=\"750\" y=\"-690\"><field name=\"BROADCAST_OPTION\" id=\"JUEnjt3LtA^OwIG;jlv8\" variabletype=\"broadcast_msg\">AUTONOMOUS</field><next><block type=\"v5_sensing_controller_is_enabled\" id=\"gdeNq*}#H0sciarueccd\"><field name=\"isEnabled\">false</field><next><block type=\"v5_looks_set_cursor\" id=\"9Z2A[!Tkfebkgj=nK(J,\"><field name=\"TARGET\">Brain</field><value name=\"ROW\"><shadow type=\"math_whole_number\" id=\"]3ZVUhaE,$/_O4i/3swP\"><field name=\"NUM\">3</field></shadow></value><value name=\"COLUMN\"><shadow type=\"math_whole_number\" id=\"t[*^^V_3m,$/4O=M`w*:\"><field name=\"NUM\">1</field></shadow></value><next><block type=\"v5_looks_print\" id=\"Y]y1WP?.{%n:_h9uTK}Q\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">true</field><value name=\"DATA\"><shadow type=\"text\" id=\"hsvr!OIOuQ^:40nTDH)i\"><field name=\"TEXT\">Starting Autonomous Program</field></shadow></value><next><block type=\"v5_other_comment\" id=\"d!u3779T.)EY1HpH7XGA\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"Gkp0=9$20CwZO^?Qq_$(\"><field name=\"comment\">Initialize the grabber motor it now has a 0 position - in case you have preloaded, and claw is open</field></shadow></value><next><block type=\"v5_other_comment\" id=\"3]Tf-.(wB!:oo;Tq3W1?\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"%*kPsTLgW0SIE]GqzMH@\"><field name=\"comment\">the 0 position is with loaded objects!!</field></shadow></value><next><block type=\"v5_motion_stop_motor\" id=\"o`K1bFbS*l5=W9[@QJse\"><field name=\"MOTOR\">grabberM</field><next><block type=\"v5_motion_set_motor_position\" id=\":`bB|x4Xt.xL^N%g0`_F\"><field name=\"MOTOR\">grabberM</field><field name=\"UNITS\">deg</field><value name=\"DEGS\"><shadow type=\"math_number\" id=\"Nc:YrzM]:8Id^1Aauj6p\"><field name=\"NUM\">0</field></shadow></value><next><block type=\"v5_motion_set_motor_torque\" id=\"(%Nb4NUasN8=n~_3}k[B\"><field name=\"MOTOR\">grabberM</field><value name=\"TORQUE\"><shadow type=\"math_number\" id=\"rb+6YwG{xxkj_S.(U5mC\"><field name=\"NUM\">80</field></shadow></value><next><block type=\"v5_motion_set_motor_velocity\" id=\"^Y^^emQnzeKYHi7r*@}?\"><field name=\"MOTOR\">grabberM</field><field name=\"UNITS\">rpm</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"eCb4z(F|(s,IAAloqyhA\"><field name=\"NUM\">50</field></shadow></value><next><block type=\"v5_other_comment\" id=\"JL+{0#Qk23EMMj}2?Rha\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"jeQ;*tE4HX]bqeXbBySw\"><field name=\"comment\">Drive 400mm forward at 75RPM (green cart.)</field></shadow></value><next><block type=\"v5_drivetrain_set_drive_velocity\" id=\"#h|4!xXphurVC/?)5ffR\"><field name=\"UNITS\">rpm</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"?hTpa1}*]Vk[:5tTCOAr\"><field name=\"NUM\">75</field></shadow></value><next><block type=\"v5_drivetrain_drive_for\" id=\"mIYs@_V+epOraoJoWh{)\"><field name=\"DIRECTION\">fwd</field><field name=\"UNITS\">mm</field><field name=\"anddontwait_mutator\">false</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"181_{j7zL9yjjC@yL?*0\"><field name=\"NUM\">400</field></shadow></value><next><block type=\"v5_motion_stop_driving\" id=\"2aUBkDEd(jo-m.]HMb_s\"><next><block type=\"v5_other_comment\" id=\"o$WUNP.$OTFrj[xE(7Hb\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"Af*QN^a*^`Dl~Zj}U%kX\"><field name=\"comment\">Open the grabber to release the rings</field></shadow></value><next><block type=\"v5_looks_set_cursor\" id=\"~YL1);NMNd71h?mvRfMs\"><field name=\"TARGET\">Brain</field><value name=\"ROW\"><shadow type=\"math_whole_number\" id=\":DdqG3!`y@2F.pP1zz#*\"><field name=\"NUM\">4</field></shadow></value><value name=\"COLUMN\"><shadow type=\"math_whole_number\" id=\")xqYlN2Q*=NJNcDFl]d$\"><field name=\"NUM\">1</field></shadow></value><next><block type=\"v5_looks_print\" id=\"5TX%ZfEUCnQZsz3ASt^o\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">true</field><value name=\"DATA\"><shadow type=\"text\" id=\"m1?Qf;!)1]e~RFg!4~r3\"><field name=\"TEXT\">Opening Claw</field></shadow></value><next><block type=\"v5_motion_spin_for\" id=\".~IajNPT3DnO7xkGpX(^\"><field name=\"MOTOR\">grabberM</field><field name=\"DIRECTION\">fwd</field><field name=\"UNITS\">deg</field><field name=\"anddontwait_mutator\">true</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"TG@IEsiRG2f..sX)01.#\"><field name=\"NUM\">50</field></shadow></value><next><block type=\"v5_motion_stop_motor\" id=\"/aqBt={zvZ?^|;U=Qc[w\"><field name=\"MOTOR\">grabberM</field><next><block type=\"v5_other_comment\" id=\"n6sT-=:5v$?(m?Tb$[G^\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"XL3%rPC%;s7H#Pq*@RR`\"><field name=\"comment\">Make 90 degree right turn - do it slowely</field></shadow></value><next><block type=\"v5_drivetrain_set_drive_velocity\" id=\"i-0^*DlkNtr,YNHyzCh+\"><field name=\"UNITS\">rpm</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"N~P(YfI:BX`w2KN0x9d^\"><field name=\"NUM\">50</field></shadow></value><next><block type=\"v5_drivetrain_turn_for\" id=\"`y(briy0~],QdQ=;Dpk^\"><field name=\"TURNDIRECTION\">right</field><field name=\"anddontwait_mutator\">false</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"`xYqbk@}s/=YD}Y4aZix\"><field name=\"NUM\">90</field></shadow></value><next><block type=\"v5_motion_stop_driving\" id=\"@hmB{jx}K=n(`SSEc?LS\"><next><block type=\"v5_other_comment\" id=\"VbP:?Lh8Q+:=-h.W-^#0\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"y}K5c:R%P/Os0z+p:UgE\"><field name=\"comment\">Backup 200mm and come to a stop</field></shadow></value><next><block type=\"v5_drivetrain_drive_for\" id=\"bUuq(Gq}df`iIaUc;41W\"><field name=\"DIRECTION\">rev</field><field name=\"UNITS\">mm</field><field name=\"anddontwait_mutator\">false</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"|#m;tc$5PA)`*:=;YWXa\"><field name=\"NUM\">200</field></shadow></value><next><block type=\"v5_motion_stop_driving\" id=\"GjB!(`RcLR3|)F/n*$(p\"><next><block type=\"v5_looks_set_cursor\" id=\"09@28osI$ag4(Gl2YoNn\"><field name=\"TARGET\">Brain</field><value name=\"ROW\"><shadow type=\"math_whole_number\" id=\"jbYUle#,fwub;64B6TMb\"><field name=\"NUM\">7</field></shadow></value><value name=\"COLUMN\"><shadow type=\"math_whole_number\" id=\"*-x0xsdl+{T)s:x~y-K2\"><field name=\"NUM\">1</field></shadow></value><next><block type=\"v5_looks_print\" id=\"e-d?$n_[A7NmB%%-ig@g\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">true</field><value name=\"DATA\"><shadow type=\"text\" id=\"vsl57G7PW_CBfRJ#,_7d\"><field name=\"TEXT\">Ended Autonomous Run...</field></shadow></value></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block><block type=\"v5_events_when_autonomous\" id=\"2X^K_N,*Xn%lX03Ar1-h\" x=\"1090\" y=\"-690\"></block><block type=\"v5_events_when_broadcasted\" id=\"BU/bxV6_s2=Zgs-x,!%r\" x=\"1550\" y=\"-690\"><field name=\"BROADCAST_OPTION\" id=\"Uy:T%!B5r~Hm`r0];FFP\" variabletype=\"broadcast_msg\">DRIVER</field><next><block type=\"v5_looks_set_cursor\" id=\"P3{6^y]|pde9S`$]A5[-\"><field name=\"TARGET\">Brain</field><value name=\"ROW\"><shadow type=\"math_whole_number\" id=\"]5bi/ScoZvn*W}^k@+fH\"><field name=\"NUM\">2</field></shadow></value><value name=\"COLUMN\"><shadow type=\"math_whole_number\" id=\"DhILuL7``/2Xg9`sN0c/\"><field name=\"NUM\">1</field></shadow></value><next><block type=\"v5_looks_print\" id=\"c1$|V3~!@sMR.hS9mZo1\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">true</field><value name=\"DATA\"><shadow type=\"text\" id=\"Wm1:|A47wU5xxryQMLPg\"><field name=\"TEXT\">Driver Control NOT allowed....</field></shadow></value><next><block type=\"v5_looks_set_cursor\" id=\"ainJ)c-.,z3MWj9R3+nc\"><field name=\"TARGET\">Brain</field><value name=\"ROW\"><shadow type=\"math_whole_number\" id=\"P_5zEf@y6ZLm;_pdXYz|\"><field name=\"NUM\">4</field></shadow></value><value name=\"COLUMN\"><shadow type=\"math_whole_number\" id=\".:T6ZE2-l?MI)*_:fgBP\"><field name=\"NUM\">1</field></shadow></value><next><block type=\"v5_sensing_controller_is_enabled\" id=\"NKubRFT*V@KjZEIRn~M)\"><field name=\"isEnabled\">false</field></block></next></block></next></block></next></block></next></block></xml>","robotConfig":[{"port":[],"name":"Controller1","customName":false,"deviceType":"Controller","deviceClass":"controller","setting":{"left":"","leftDir":"false","right":"","rightDir":"false","upDown":"","upDownDir":"false","xB":"","xBDir":"false","drive":"none","id":"primary"},"triportSourcePort":22},{"port":[18],"name":"grabberM","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1","id":"partner"},"triportSourcePort":22},{"port":[10,1,5],"name":"Drivetrain","customName":false,"deviceType":"Drivetrain","deviceClass":"smartdrive","setting":{"type":"2-motor","wheelSize":"wheel4in","gear":"ratio18_1","gearRatio":"1:1","direction":"fwd","gyroType":"inertial","width":"295","unit":"mm","wheelbase":"40","wheelbaseUnit":"mm","xOffset":"0","xOffsetUnit":"mm","yOffset":"0","yOffsetUnit":"mm","thetaOffset":"180"}}],"slot":1,"platform":"V5","sdkVersion":"20240802.15.00.00","appVersion":"4.0.5","minVersion":"3.1.0","fileFormat":"2.0.0","targetBrainGen":"First","v5Sounds":[{"name":"game over","url":"static/sounds/mixkit-arcade-retro-game-over-213.wav"}],"v5SoundsEnabled":false,"downloadLanguage":"python","cppStatus":"true","cpp":"// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START V5 MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END V5 MACROS\n\n\n// Robot configuration code.\ncontroller Controller1 = controller(primary);\nmotor grabberM = motor(PORT18, ratio18_1, false);\n\nmotor LeftDriveSmart = motor(PORT10, ratio18_1, false);\nmotor RightDriveSmart = motor(PORT1, ratio18_1, true);\ninertial DrivetrainInertial = inertial(PORT5);\nsmartdrive Drivetrain = smartdrive(LeftDriveSmart, RightDriveSmart, DrivetrainInertial, 319.19, 320, 40, mm, 1);\n\n\n\n// generating and setting random seed\nvoid initializeRandomSeed(){\n  int systemTime = Brain.Timer.systemHighResolution();\n  double batteryCurrent = Brain.Battery.current();\n  double batteryVoltage = Brain.Battery.voltage(voltageUnits::mV);\n\n  // Combine these values into a single integer\n  int seed = int(batteryVoltage + batteryCurrent * 100) + systemTime;\n\n  // Set the seed\n  srand(seed);\n}\n\nbool vexcode_initial_drivetrain_calibration_completed = false;\nvoid calibrateDrivetrain() {\n  wait(200, msec);\n  Brain.Screen.print(\"Calibrating\");\n  Brain.Screen.newLine();\n  Brain.Screen.print(\"Inertial\");\n  DrivetrainInertial.calibrate();\n  while (DrivetrainInertial.isCalibrating()) {\n    wait(25, msec);\n  }\n  vexcode_initial_drivetrain_calibration_completed = true;\n  // Clears the screen and returns the cursor to row 1, column 1.\n  Brain.Screen.clearScreen();\n  Brain.Screen.setCursor(1, 1);\n}\n\nvoid vexcodeInit() {\n\n  // Calibrate the Drivetrain\n  calibrateDrivetrain();\n\n  //Initializing random seed.\n  initializeRandomSeed(); \n}\n\n\n\n\n// Helper to make playing sounds from the V5 in VEXcode easier and\n// keeps the code cleaner by making it clear what is happening.\nvoid playVexcodeSound(const char *soundName) {\n  printf(\"VEXPlaySound:%s\\n\", soundName);\n  wait(5, msec);\n}\n\n\n\n// Generated code.\n\n\n\n// define variable for remote controller enable/disable\nbool RemoteControlCodeEnabled = true;\n\n\n\n// Include the V5 Library\n#include \"vex.h\"\n  \n// Allows for easier use of the VEX Library\nusing namespace vex;\n\ncompetition Competition;\n\nint Brain_precision = 0, Console_precision = 0, Controller1_precision = 0;\n\nfloat myVariable, speedForward, speedPlusState, speedFactor, speedScale;\n\nevent message1 = event();\nevent AUTONOMOUS = event();\nevent DRIVER = event();\n\n// \"when started\" hat block\nint whenStarted1() {\n  Brain.Screen.setCursor(1, 1);\n  Brain.Screen.print(\"Program Started.....\");\n  Brain.Screen.newLine();\n  RemoteControlCodeEnabled = false;\n  // When testing broadbast blocks should be enabled to\n  // to trigger autnomous followd by driver - it is also possible\n  // to just enable driver by disabling broadcast autonomous block\n  AUTONOMOUS.broadcastAndWait();\n  return 0;\n}\n\n// \"when I receive AUTONOMOUS\" hat block\nvoid onevent_AUTONOMOUS_0() {\n  RemoteControlCodeEnabled = false;\n  Brain.Screen.setCursor(3, 1);\n  Brain.Screen.print(\"Starting Autonomous Program\");\n  Brain.Screen.newLine();\n  // Initialize the grabber motor it now has a 0 position - in case you have preloaded, and claw is open\n  // the 0 position is with loaded objects!!\n  grabberM.stop();\n  grabberM.setPosition(0.0, degrees);\n  grabberM.setMaxTorque(80.0, percent);\n  grabberM.setVelocity(50.0, rpm);\n  // Drive 400mm forward at 75RPM (green cart.)\n  Drivetrain.setDriveVelocity(75.0, rpm);\n  Drivetrain.driveFor(forward, 400.0, mm, true);\n  Drivetrain.stop();\n  // Open the grabber to release the rings\n  Brain.Screen.setCursor(4, 1);\n  Brain.Screen.print(\"Opening Claw\");\n  Brain.Screen.newLine();\n  grabberM.spinFor(forward, 50.0, degrees, false);\n  grabberM.stop();\n  // Make 90 degree right turn - do it slowely\n  Drivetrain.setDriveVelocity(50.0, rpm);\n  Drivetrain.turnFor(right, 90.0, degrees, true);\n  Drivetrain.stop();\n  // Backup 200mm and come to a stop\n  Drivetrain.driveFor(reverse, 200.0, mm, true);\n  Drivetrain.stop();\n  Brain.Screen.setCursor(7, 1);\n  Brain.Screen.print(\"Ended Autonomous Run...\");\n  Brain.Screen.newLine();\n}\n\n// \"when autonomous\" hat block\nint onauton_autonomous_0() {\n  return 0;\n}\n\n// \"when I receive DRIVER\" hat block\nvoid onevent_DRIVER_0() {\n  Brain.Screen.setCursor(2, 1);\n  Brain.Screen.print(\"Driver Control NOT allowed....\");\n  Brain.Screen.newLine();\n  Brain.Screen.setCursor(4, 1);\n  RemoteControlCodeEnabled = false;\n}\n\nvoid VEXcode_driver_task() {\n  // Start the driver control tasks....\n\n  while(Competition.isDriverControl() && Competition.isEnabled()) {this_thread::sleep_for(10);}\n\n  return;\n}\n\nvoid VEXcode_auton_task() {\n  // Start the auton control tasks....\n  vex::task auto0(onauton_autonomous_0);\n  while(Competition.isAutonomous() && Competition.isEnabled()) {this_thread::sleep_for(10);}\n  auto0.stop();\n  return;\n}\n\n\n\nint main() {\n  vex::competition::bStopTasksBetweenModes = false;\n  Competition.autonomous(VEXcode_auton_task);\n  Competition.drivercontrol(VEXcode_driver_task);\n\n  // Initializing Robot Configuration. DO NOT REMOVE!\n  vexcodeInit();\n\n  // register event handlers\n  AUTONOMOUS(onevent_AUTONOMOUS_0);\n  DRIVER(onevent_DRIVER_0);\n\n  wait(15, msec);\n  // post event registration\n\n  // set default print color to black\n  printf(\"\\033[30m\");\n\n  // wait for rotation sensor to fully initialize\n  wait(30, msec);\n\n  whenStarted1();\n}","target":"Physical"}