{"mode":"Blocks","workspace":"<xml xmlns=\"http://www.w3.org/1999/xhtml\"><variables><variable type=\"\" id=\"U`9aA+=)r+L1tzA.)-qi\" islocal=\"false\" iscloud=\"false\" arraylength=\"0\" arraywidth=\"0\">myVariable</variable><variable type=\"\" id=\"TSmOw]OMwzRLWKfX7H8L\" islocal=\"false\" iscloud=\"false\" arraylength=\"0\" arraywidth=\"0\">PI</variable><variable type=\"\" id=\"$DF#uT,IvFp%t7G#]+sy\" islocal=\"false\" iscloud=\"false\" arraylength=\"0\" arraywidth=\"0\">wheelDiam</variable><variable type=\"\" id=\"OvJ,Q49+mh0P%NU.%]TG\" islocal=\"false\" iscloud=\"false\" arraylength=\"0\" arraywidth=\"0\">circumference</variable><variable type=\"\" id=\"nL+emKV@OFYu2DJ_|~MX\" islocal=\"false\" iscloud=\"false\" arraylength=\"0\" arraywidth=\"0\">distanceToDrive</variable></variables><block type=\"v5_events_when_started\" id=\".NsXwU_L.OuU1l7Sho$F\" x=\"70\" y=\"110\"><next><block type=\"v5_looks_set_cursor\" id=\"07boB_)J^0(eo5IS_DlR\"><field name=\"TARGET\">Brain</field><value name=\"ROW\"><shadow type=\"math_whole_number\" id=\"oVc5r|B@X*U=w,{SqHi;\"><field name=\"NUM\">1</field></shadow></value><value name=\"COLUMN\"><shadow type=\"math_whole_number\" id=\"*pr4Q{LXDFNna:`~@pe1\"><field name=\"NUM\">1</field></shadow></value><next><block type=\"v5_looks_print\" id=\"j28uN=:|Rj~x8WT9Gw9=\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">FALSE</field><value name=\"DATA\"><shadow type=\"text\" id=\"k_+$/2m|THz~AV=:@F)I\"><field name=\"TEXT\">program started..............</field></shadow></value><next><block type=\"v5_motion_set_motor_velocity\" id=\"]@fa6-/I_E?4^~gtke;-\"><field name=\"MOTOR\">leftMotor</field><field name=\"UNITS\">rpm</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"i^3*,?yL]]ZJXL3!.~%S\"><field name=\"NUM\">50</field></shadow></value><next><block type=\"v5_motion_set_motor_velocity\" id=\"*qLz]YETUe2~%U?iv@hE\"><field name=\"MOTOR\">rightMotor</field><field name=\"UNITS\">rpm</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"cNM:k?ef4S{vP`qKzm^X\"><field name=\"NUM\">50</field></shadow></value><next><block type=\"procedures_call\" id=\"r2E,yYWZQztqAM07.tSZ\"><mutation proccode=\"driveDistance %n\" proceduredefid=\";q|xN|-{~myc:EVJJB,S\" argumentids=\"[&quot;_DY=d61i=^zWpj!,dFd:&quot;]\" warp=\"false\"></mutation><value name=\"_DY=d61i=^zWpj!,dFd:\"><shadow type=\"math_number\" id=\"OzV@RrhOF-5]G}3P$;Ab\"><field name=\"NUM\">400</field></shadow></value><next><block type=\"v5_motion_spin_for\" id=\"#3N~vJoBf0;)ZoD*u3kM\"><field name=\"MOTOR\">leftMotor</field><field name=\"DIRECTION\">fwd</field><field name=\"UNITS\">deg</field><field name=\"anddontwait_mutator\">TRUE</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"jNVS7yxcr)S~`gb1E{7k\"><field name=\"NUM\">90</field></shadow><block type=\"v5_variables_variable\" id=\"~ccty:GmpJNacg6vMS{q\"><field name=\"VARIABLE\" id=\"nL+emKV@OFYu2DJ_|~MX\" variabletype=\"\">distanceToDrive</field></block></value><next><block type=\"v5_motion_spin_for\" id=\"SCL(65JJ7:C3;vG8;vn}\"><field name=\"MOTOR\">rightMotor</field><field name=\"DIRECTION\">fwd</field><field name=\"UNITS\">deg</field><field name=\"anddontwait_mutator\">FALSE</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"[K~).wUGT{/yNI{jXfz#\"><field name=\"NUM\">90</field></shadow><block type=\"v5_variables_variable\" id=\"yyAh+iI6qA9lUgaqx4_E\"><field name=\"VARIABLE\" id=\"nL+emKV@OFYu2DJ_|~MX\" variabletype=\"\">distanceToDrive</field></block></value><next><block type=\"v5_motion_stop_motor\" id=\"@22s8C#kxTVF[6+K?8i;\"><field name=\"MOTOR\">leftMotor</field><next><block type=\"v5_motion_stop_motor\" id=\"a[O:q#FQgrO5jL:dX){u\"><field name=\"MOTOR\">rightMotor</field></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block><block type=\"procedures_definition\" id=\"^43(H7q7{d=9dt(13;OB\" x=\"810\" y=\"110\"><statement name=\"custom_block\"><shadow type=\"procedures_prototype\" id=\";q|xN|-{~myc:EVJJB,S\"><mutation proccode=\"driveDistance %n\" proceduredefid=\";q|xN|-{~myc:EVJJB,S\" argumentids=\"[&quot;_DY=d61i=^zWpj!,dFd:&quot;]\" argumentnames=\"[&quot;number&quot;]\" argumentdefaults=\"[&quot;todo&quot;]\" argumenttypes=\"[&quot;n&quot;]\" warp=\"false\"></mutation><value name=\"_DY=d61i=^zWpj!,dFd:\"><shadow type=\"argument_reporter_number\" id=\"p}NE1:Qg;#j$7{^,o|QQ\"><mutation funcname=\"driveDistance_number\" argumentid=\"_DY=d61i=^zWpj!,dFd:\" proceduredefid=\";q|xN|-{~myc:EVJJB,S\"></mutation><field name=\"VALUE\">number</field></shadow></value></shadow></statement><next><block type=\"v5_variables_set_variable\" id=\";;1ah.J@~pPC3AVq.}DA\"><field name=\"VARIABLE\" id=\"nL+emKV@OFYu2DJ_|~MX\" variabletype=\"\">distanceToDrive</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"ogR5f1YqOGlI#gAtoesw\"><field name=\"NUM\">0</field></shadow></value><next><block type=\"v5_variables_set_variable\" id=\"KHv%N43)`ZH97RsN+k]|\"><field name=\"VARIABLE\" id=\"TSmOw]OMwzRLWKfX7H8L\" variabletype=\"\">PI</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"HG|Qi:3KHx9.y]jy?abN\"><field name=\"NUM\">3.14</field></shadow></value><next><block type=\"v5_variables_set_variable\" id=\"1rZX}u$%Y%oq_v5[lxQi\"><field name=\"VARIABLE\" id=\"$DF#uT,IvFp%t7G#]+sy\" variabletype=\"\">wheelDiam</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"hOFbxw4e*Ot1)W.mPIK7\"><field name=\"NUM\">4.0</field></shadow></value><next><block type=\"v5_variables_set_variable\" id=\"|g`Ga+)1J,+)$vMAR)|s\"><field name=\"VARIABLE\" id=\"OvJ,Q49+mh0P%NU.%]TG\" variabletype=\"\">circumference</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"-XjEjuUv-3G:xrnHloqt\"><field name=\"NUM\">0</field></shadow><block type=\"v5_operator_multiply\" id=\"vMk@acU!WwJLP|?K9%#~\"><value name=\"NUM1\"><shadow type=\"math_number\" id=\"GYR=fX:Q,;F~q~!3(g=(\"><field name=\"NUM\"></field></shadow><block type=\"v5_variables_variable\" id=\"Ylntfa%EdosvL,3As`|P\"><field name=\"VARIABLE\" id=\"TSmOw]OMwzRLWKfX7H8L\" variabletype=\"\">PI</field></block></value><value name=\"NUM2\"><shadow type=\"math_number\" id=\"u*mtp,@bqgybrA{2D(I_\"><field name=\"NUM\"></field></shadow><block type=\"v5_variables_variable\" id=\")c($FpY(]cdk]2S#Gqsn\"><field name=\"VARIABLE\" id=\"$DF#uT,IvFp%t7G#]+sy\" variabletype=\"\">wheelDiam</field></block></value></block></value><next><block type=\"v5_variables_set_variable\" id=\"[UapH:4y}NgPH;YuGReL\"><field name=\"VARIABLE\" id=\"nL+emKV@OFYu2DJ_|~MX\" variabletype=\"\">distanceToDrive</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"wGzVTm8M6zB,3K0z5y*Z\"><field name=\"NUM\">0</field></shadow><block type=\"v5_operator_multiply\" id=\"|J40C3.UJg*@ctzDBY2r\"><value name=\"NUM1\"><shadow type=\"math_number\" id=\"iouw+]q}2vweu(vA.DdD\"><field name=\"NUM\"></field></shadow><block type=\"v5_operator_divide\" id=\"Qbb!7ao9hvBvg/TxNi_e\"><value name=\"NUM1\"><shadow type=\"math_number\" id=\"A,DLg8.%cmj(MPM$0F#)\"><field name=\"NUM\"></field></shadow><block type=\"argument_reporter_number\" id=\".@@bIN3A/%`4o1??qKIs\"><mutation funcname=\"driveDistance_number\" argumentid=\"_DY=d61i=^zWpj!,dFd:\" proceduredefid=\";q|xN|-{~myc:EVJJB,S\"></mutation><field name=\"VALUE\">number</field></block></value><value name=\"NUM2\"><shadow type=\"math_number\" id=\"f_*;+b$)2H#Cm+z8r-10\"><field name=\"NUM\"></field></shadow><block type=\"v5_variables_variable\" id=\"Hh@oY6Z$HQ7!0_u~MBX:\"><field name=\"VARIABLE\" id=\"OvJ,Q49+mh0P%NU.%]TG\" variabletype=\"\">circumference</field></block></value></block></value><value name=\"NUM2\"><shadow type=\"math_number\" id=\"H8m6[-9)k1:nd^H)Q]j8\"><field name=\"NUM\">360</field></shadow></value></block></value></block></next></block></next></block></next></block></next></block></next></block></xml>","rconfig":[{"port":[1],"name":"leftMotor","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1"},"triportSourcePort":22},{"port":[10],"name":"rightMotor","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"true","fwd":"forward","rev":"reverse","gear":"ratio18_1"},"triportSourcePort":22},{"port":[],"name":"Controller1","customName":false,"deviceType":"Controller","deviceClass":"controller","setting":{"left":"","leftDir":"false","right":"","rightDir":"false","upDown":"","upDownDir":"false","xB":"","xBDir":"false","drive":"none","id":"primary"},"triportSourcePort":22}],"slot":0,"platform":"V5","sdkVersion":"20211013.15.00.00","appVersion":"2.2.1","fileFormat":"1.0.1","icon":"","targetBrainGen":"First","cppStatus":"true","cpp":"// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START V5 MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END V5 MACROS\n\n\n// Robot configuration code.\nmotor leftMotor = motor(PORT1, ratio18_1, false);\n\nmotor rightMotor = motor(PORT10, ratio18_1, true);\n\ncontroller Controller1 = controller(primary);\n\n\n\n\n\n// Generated code.\n\n\n\n// define variable for remote controller enable/disable\nbool RemoteControlCodeEnabled = true;\n\n\n\n// Include the V5 Library\n#include \"vex.h\"\n  \n// Allows for easier use of the VEX Library\nusing namespace vex;\n\n// User defined function\nvoid myblockfunction_driveDistance_number(double myblockfunction_driveDistance_number__number);\n\nint Brain_precision = 0, Console_precision = 0, Controller1_precision = 0;\n\nfloat myVariable, PI, wheelDiam, circumference, distanceToDrive;\n\n// User defined function\nvoid myblockfunction_driveDistance_number(double myblockfunction_driveDistance_number__number) {\n  distanceToDrive = 0.0;\n  PI = 3.14;\n  wheelDiam = 4.0;\n  circumference = PI * wheelDiam;\n  distanceToDrive = (myblockfunction_driveDistance_number__number / circumference) * 360.0;\n}\n\n// \"when started\" hat block\nint whenStarted1() {\n  Brain.Screen.setCursor(1, 1);\n  Brain.Screen.print(\"program started..............\");\n  leftMotor.setVelocity(50.0, rpm);\n  rightMotor.setVelocity(50.0, rpm);\n  myblockfunction_driveDistance_number(400.0);\n  leftMotor.spinFor(forward, distanceToDrive, degrees, false);\n  rightMotor.spinFor(forward, distanceToDrive, degrees, true);\n  leftMotor.stop();\n  rightMotor.stop();\n  return 0;\n}\n\n\nint main() {\n  // post event registration\n\n  // set default print color to black\n  printf(\"\\033[30m\");\n\n  // wait for rotation sensor to fully initialize\n  wait(30, msec);\n\n  whenStarted1();\n}","target":"Physical"}