{"mode":"Blocks","workspace":"<xml xmlns=\"http://www.w3.org/1999/xhtml\"><variables><variable type=\"\" id=\"U`9aA+=)r+L1tzA.)-qi\" islocal=\"false\" iscloud=\"false\" arraylength=\"0\" arraywidth=\"0\">myVariable</variable></variables><comment id=\":YErA!qkhuw6g(g71m,R\" x=\"1085\" y=\"-40\" h=\"240\" w=\"354\">Project:  4 motor group competiton drive\n              \nAuthor:  Willem Scholten\n\nCreated:  25-10-2022\n\nConfiguration: LM and RM motogroups on ports:\nLM ports: 10 &amp; 9.  RM ports: 1 &amp; 2\nNone</comment><block type=\"v5_events_when_started\" id=\".NsXwU_L.OuU1l7Sho$F\" x=\"30\" y=\"10\"><next><block type=\"v5_sensing_controller_is_enabled\" id=\"odg_rFWLw=?W:[mxQ:|G\"><field name=\"isEnabled\">false</field><next><block type=\"v5_looks_set_cursor\" id=\"+]dU{PEyG*[Xi!m6u.D4\"><field name=\"TARGET\">Brain</field><value name=\"ROW\"><shadow type=\"math_whole_number\" id=\"5Q_-TO6R=!vAoWiw,uV!\"><field name=\"NUM\">1</field></shadow></value><value name=\"COLUMN\"><shadow type=\"math_whole_number\" id=\"3*qb%OzgWg+4lhJdrghN\"><field name=\"NUM\">1</field></shadow></value><next><block type=\"v5_looks_print\" id=\"?7%jCyY.g,MheDSGE=!p\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">TRUE</field><value name=\"DATA\"><shadow type=\"text\" id=\"xKer*f9,Y!{dm6f/JDK$\"><field name=\"TEXT\">Waiting for Start</field></shadow></value><next><block type=\"v5_looks_print\" id=\"n_vj:M|+xyP%!boblWPD\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">FALSE</field><value name=\"DATA\"><shadow type=\"text\" id=\"Iz1qW?XjZJ{s,.}!}ncX\"><field name=\"TEXT\">Waiting for FIELD control</field></shadow></value></block></next></block></next></block></next></block></next></block><block type=\"v5_events_when_driver\" id=\"2sxv[tBvb/TOc3zh^a$R\" x=\"611\" y=\"10\"><next><block type=\"v5_sensing_controller_is_enabled\" id=\"ww?G2ab%o0IIMmZJWO2Q\"><field name=\"isEnabled\">true</field><next><block type=\"v5_looks_set_cursor\" id=\"Tmp^ee9Id6uEeN+eX:Ug\"><field name=\"TARGET\">Brain</field><value name=\"ROW\"><shadow type=\"math_whole_number\" id=\"s`?rzjb.z|RU~pl+LtQX\"><field name=\"NUM\">3</field></shadow></value><value name=\"COLUMN\"><shadow type=\"math_whole_number\" id=\"M8NdAeOW?e`E[G=#v2h$\"><field name=\"NUM\">1</field></shadow></value><next><block type=\"v5_looks_print\" id=\"{Yrh@!!]NVS({h1KK=,,\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">FALSE</field><value name=\"DATA\"><shadow type=\"text\" id=\"@5jj[mCwh9x;Jo{krN6g\"><field name=\"TEXT\">Entered DRIVER mode</field></shadow></value><next><block type=\"v5_control_forever\" id=\"F.tPZ%Bi}Wa/I(0.4jnV\"><statement name=\"SUBSTACK\"><block type=\"v5_motion_set_motor_velocity\" id=\"T6e*]^{.psU]wJ*L5r_C\"><field name=\"MOTOR\">LMgroup</field><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"dfyb,9#k_%C=KRJy!Nh0\"><field name=\"NUM\">50</field></shadow><block type=\"v5_sensing_position_of_controller\" id=\"RK6PF7/Ad-rNeL4itX1/\"><field name=\"CONTROLLER\">Controller1</field><field name=\"AXIS\">Axis3</field></block></value><next><block type=\"v5_motion_set_motor_velocity\" id=\"@xQw1=pu(mo^F;HpdNQz\"><field name=\"MOTOR\">RMgroup</field><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"8X/f3.xsEY$0oe@)heQE\"><field name=\"NUM\">50</field></shadow><block type=\"v5_sensing_position_of_controller\" id=\")SkevVK1[T!FfA__6V4X\"><field name=\"CONTROLLER\">Controller1</field><field name=\"AXIS\">Axis2</field></block></value><next><block type=\"v5_motion_spin\" id=\"a8l`x.o:cm=~TF]_*T[F\"><field name=\"MOTOR\">LMgroup</field><field name=\"DIRECTION\">fwd</field><next><block type=\"v5_motion_spin\" id=\"o_.%~!OGeR;n2/@;3Y^}\"><field name=\"MOTOR\">RMgroup</field><field name=\"DIRECTION\">fwd</field></block></next></block></next></block></next></block></statement></block></next></block></next></block></next></block></next></block><block type=\"v5_events_when_autonomous\" id=\"y)n):)-6lhx,qkLtf#Zn\" x=\"30\" y=\"351\"><next><block type=\"v5_sensing_controller_is_enabled\" id=\"mG/4bHcWtxU5HJwJkpfu\"><field name=\"isEnabled\">false</field><next><block type=\"v5_looks_set_cursor\" id=\"U}ne0$IR.S,f.jn!=11@\"><field name=\"TARGET\">Brain</field><value name=\"ROW\"><shadow type=\"math_whole_number\" id=\"YfY{2r]JtpE9H*JkhRlA\"><field name=\"NUM\">4</field></shadow></value><value name=\"COLUMN\"><shadow type=\"math_whole_number\" id=\"S#tF;-f4U;RZEGage6K1\"><field name=\"NUM\">1</field></shadow></value><next><block type=\"v5_looks_print\" id=\"JZ-r_kP;TG!{~QLlN_6?\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">FALSE</field><value name=\"DATA\"><shadow type=\"text\" id=\"1UzbO1j4_z}CPO],1]~(\"><field name=\"TEXT\">Entered AUTONOMOUS mode</field></shadow></value></block></next></block></next></block></next></block></xml>","rconfig":[{"port":[],"name":"Controller1","customName":false,"deviceType":"Controller","deviceClass":"controller","setting":{"left":"","leftDir":"false","right":"","rightDir":"false","upDown":"","upDownDir":"false","xB":"","xBDir":"false","drive":"none","id":"primary"},"triportSourcePort":22},{"port":[10,9],"name":"LMgroup","customName":true,"deviceType":"MotorGroup","deviceClass":"motor_group","setting":{"fwd":"forward","rev":"reverse","gear":"ratio18_1","motor_a_reversed":"false","motor_b_reversed":"false","id":"partner"},"triportSourcePort":22},{"port":[1,2],"name":"RMgroup","customName":true,"deviceType":"MotorGroup","deviceClass":"motor_group","setting":{"fwd":"forward","rev":"reverse","gear":"ratio18_1","motor_a_reversed":"true","motor_b_reversed":"true"},"triportSourcePort":22}],"slot":5,"platform":"V5","sdkVersion":"20220726.10.00.00","appVersion":"2.4.0","minVersion":"2.4.0","fileFormat":"1.0.1","icon":"","targetBrainGen":"First","cppStatus":"true","cpp":"// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START V5 MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END V5 MACROS\n\n\n// Robot configuration code.\ncontroller Controller1 = controller(primary);\nmotor LMgroupMotorA = motor(PORT10, ratio18_1, false);\nmotor LMgroupMotorB = motor(PORT9, ratio18_1, false);\nmotor_group LMgroup = motor_group(LMgroupMotorA, LMgroupMotorB);\n\nmotor RMgroupMotorA = motor(PORT1, ratio18_1, true);\nmotor RMgroupMotorB = motor(PORT2, ratio18_1, true);\nmotor_group RMgroup = motor_group(RMgroupMotorA, RMgroupMotorB);\n\n\n\n\n\n\n// Generated code.\n\n\n\n// define variable for remote controller enable/disable\nbool RemoteControlCodeEnabled = true;\n\n\n\n// Include the V5 Library\n#include \"vex.h\"\n  \n// Allows for easier use of the VEX Library\nusing namespace vex;\n\ncompetition Competition;\n\nint Brain_precision = 0, Console_precision = 0, Controller1_precision = 0;\n\nfloat myVariable;\n\n// \"when started\" hat block\nint whenStarted1() {\n  RemoteControlCodeEnabled = false;\n  Brain.Screen.setCursor(1, 1);\n  Brain.Screen.print(\"Waiting for Start\");\n  Brain.Screen.newLine();\n  Brain.Screen.print(\"Waiting for FIELD control\");\n  return 0;\n}\n\n// \"when driver control\" hat block\nint ondriver_drivercontrol_0() {\n  RemoteControlCodeEnabled = true;\n  Brain.Screen.setCursor(3, 1);\n  Brain.Screen.print(\"Entered DRIVER mode\");\n  while (true) {\n    LMgroup.setVelocity(Controller1.Axis3.position(), percent);\n    RMgroup.setVelocity(Controller1.Axis2.position(), percent);\n    LMgroup.spin(forward);\n    RMgroup.spin(forward);\n  wait(5, msec);\n  }\n  return 0;\n}\n\n// \"when autonomous\" hat block\nint onauton_autonomous_0() {\n  RemoteControlCodeEnabled = false;\n  Brain.Screen.setCursor(4, 1);\n  Brain.Screen.print(\"Entered AUTONOMOUS mode\");\n  return 0;\n}\n\nvoid VEXcode_driver_task() {\n  // Start the driver control tasks....\n  vex::task drive0(ondriver_drivercontrol_0);\n  while(Competition.isDriverControl() && Competition.isEnabled()) {this_thread::sleep_for(10);}\n  drive0.stop();\n  return;\n}\n\nvoid VEXcode_auton_task() {\n  // Start the auton control tasks....\n  vex::task auto0(onauton_autonomous_0);\n  while(Competition.isAutonomous() && Competition.isEnabled()) {this_thread::sleep_for(10);}\n  auto0.stop();\n  return;\n}\n\n\n\nint main() {\n  vex::competition::bStopTasksBetweenModes = false;\n  Competition.autonomous(VEXcode_auton_task);\n  Competition.drivercontrol(VEXcode_driver_task);\n\n  // post event registration\n\n  // set default print color to black\n  printf(\"\\033[30m\");\n\n  // wait for rotation sensor to fully initialize\n  wait(30, msec);\n\n  whenStarted1();\n}","target":"Physical"}