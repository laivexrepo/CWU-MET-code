{"mode":"Blocks","workspace":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables><variable id=\"U`9aA+=)r+L1tzA.)-qi\">myVariable</variable></variables><comment id=\"p3Ub{:RiNh^$tGsGDxd{\" x=\"749\" y=\"26\" h=\"248\" w=\"405\">Simple two motor drive base Joystick control program.\n\nAssumes Motors - as seen from back of drive base - are plugged as foillows:\n\nLeft Motor (Lmotor)  - Port #10\nRight Motor (Rmotor) - Port #1\n\n </comment><block type=\"v5_events_when_started\" id=\".NsXwU_L.OuU1l7Sho$F\" x=\"90\" y=\"230\"><next><block type=\"v5_sensing_controller_is_enabled\" id=\"DR#sX*g#ji{R#~{Xlw-9\"><field name=\"isEnabled\">false</field><next><block type=\"v5_looks_set_cursor\" id=\"Vz!JtNCy!,U-235KcmTH\"><field name=\"TARGET\">Brain</field><value name=\"ROW\"><shadow type=\"math_whole_number\" id=\"I6Gf5XBOoQew5~/[S7~^\"><field name=\"NUM\">1</field></shadow></value><value name=\"COLUMN\"><shadow type=\"math_whole_number\" id=\"~L[IMBC?smFm[YNj;4;J\"><field name=\"NUM\">1</field></shadow></value><next><block type=\"v5_looks_print\" id=\"o(x[w:_D{21-`QIRv}1,\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">true</field><value name=\"DATA\"><shadow type=\"text\" id=\"}z|l6L=8,d!jcm+D!,?~\"><field name=\"TEXT\">Program STARTED</field></shadow></value><next><block type=\"v5_looks_print\" id=\"}m~91OGrHnCSi6LWSTO=\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">false</field><value name=\"DATA\"><shadow type=\"text\" id=\"UVoFDsuiS;w/U:e7eX5J\"><field name=\"TEXT\">Waiting for FIELD control</field></shadow></value><next><block type=\"v5_motion_set_motor_stopping\" id=\"HNSX2fc3{{c3Q33SJag$\"><field name=\"MOTOR\">Lmotor</field><field name=\"MODE\">coast</field><next><block type=\"v5_motion_set_motor_stopping\" id=\"*DF_;G;^ByDb]2KS=!FA\"><field name=\"MOTOR\">Lmotor</field><field name=\"MODE\">coast</field></block></next></block></next></block></next></block></next></block></next></block></next></block><block type=\"v5_events_when_autonomous\" id=\")KE?u~A/Uw/vf`-#v%rt\" x=\"870\" y=\"330\"><next><block type=\"v5_sensing_controller_is_enabled\" id=\"K%jeU4BiUEIPIR.U8BxW\"><field name=\"isEnabled\">false</field><next><block type=\"v5_looks_set_cursor\" id=\"^=~vwqV1;!zVLd/^gY%(\"><field name=\"TARGET\">Brain</field><value name=\"ROW\"><shadow type=\"math_whole_number\" id=\";8@U9[LB|7Y{B^+ITlag\"><field name=\"NUM\">4</field></shadow></value><value name=\"COLUMN\"><shadow type=\"math_whole_number\" id=\"WH,wLL+hnfWx1P=b%1|T\"><field name=\"NUM\">1</field></shadow></value><next><block type=\"v5_looks_print\" id=\"SMAo}wyv^]Yv)9[T3.rV\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">false</field><value name=\"DATA\"><shadow type=\"text\" id=\"0lrZD.3:d4z:WEVRj.}:\"><field name=\"TEXT\">Enabled AUTONOMOUS mode</field></shadow></value></block></next></block></next></block></next></block><block type=\"v5_events_when_driver\" id=\";@+}+,*j^r)ufM?25/4`\" x=\"90\" y=\"710\"><next><block type=\"v5_sensing_controller_is_enabled\" id=\"Y^ze|4qWbf@lW|So5yrG\"><field name=\"isEnabled\">true</field><next><block type=\"v5_looks_set_cursor\" id=\"v]QbKKrQjd8XRgdOG80.\"><field name=\"TARGET\">Brain</field><value name=\"ROW\"><shadow type=\"math_whole_number\" id=\"^C0(*xmbzK7d{exijey^\"><field name=\"NUM\">3</field></shadow></value><value name=\"COLUMN\"><shadow type=\"math_whole_number\" id=\"F]puj=9;vB!,B.6wnRxm\"><field name=\"NUM\">1</field></shadow></value><next><block type=\"v5_looks_print\" id=\"z|XHf=pPnK.DSz)(/|0z\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">false</field><value name=\"DATA\"><shadow type=\"text\" id=\"$Zvam9:7mFL|VCU+/{B?\"><field name=\"TEXT\">Enabled DRIVER mode</field></shadow></value><next><block type=\"v5_control_forever\" id=\"XB]0~wp,9He!cWt*NVhM\"><statement name=\"SUBSTACK\"><block type=\"v5_motion_set_motor_velocity\" id=\"]t0soc8l8q:q*.uvPW{H\"><field name=\"MOTOR\">Lmotor</field><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow xmlns=\"http://www.w3.org/1999/xhtml\" type=\"math_number\" id=\"4.}3DZ96HPToOdl4pvyA\"><field name=\"NUM\">50</field></shadow><block type=\"v5_sensing_position_of_controller\" id=\"A,[iWOr.5OM7flcqnmI:\"><field name=\"CONTROLLER\">Controller1</field><field name=\"AXIS\">Axis3</field></block></value><next><block type=\"v5_motion_set_motor_velocity\" id=\"h.l/KGo@?xV_4}oe@P7O\"><field name=\"MOTOR\">Rmotor</field><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow xmlns=\"http://www.w3.org/1999/xhtml\" type=\"math_number\" id=\"PIE{oo2GA(H~|-w%O5p0\"><field name=\"NUM\">50</field></shadow><block type=\"v5_sensing_position_of_controller\" id=\"!CiTR*kp=H*T`yB:K#44\"><field name=\"CONTROLLER\">Controller1</field><field name=\"AXIS\">Axis2</field></block></value><next><block type=\"v5_motion_spin\" id=\"FpZrmzvMsMj4b!?7jcmM\"><field name=\"MOTOR\">Lmotor</field><field name=\"DIRECTION\">fwd</field><next><block type=\"v5_motion_spin\" id=\"!Uy%/L*/3kv22qmqC:ul\"><field name=\"MOTOR\">Rmotor</field><field name=\"DIRECTION\">fwd</field></block></next></block></next></block></next></block></statement></block></next></block></next></block></next></block></next></block></xml>","rconfig":[{"port":[10],"name":"Lmotor","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1"},"triportSourcePort":22},{"port":[1],"name":"Rmotor","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"true","fwd":"forward","rev":"reverse","gear":"ratio18_1"},"triportSourcePort":22},{"port":[],"name":"Controller1","customName":false,"deviceType":"Controller","deviceClass":"controller","setting":{"left":"","leftDir":"false","right":"","rightDir":"false","upDown":"","upDownDir":"false","xB":"","xBDir":"false","drive":"none","id":"primary"},"triportSourcePort":22}],"slot":4,"platform":"V5","sdkVersion":"20220726.10.00.00","appVersion":"3.0.3","minVersion":"3.0.0","fileFormat":"1.0.1","icon":"","targetBrainGen":"First","v5Sounds":[{"name":"game over","url":"static/sounds/mixkit-arcade-retro-game-over-213.wav"}],"v5SoundsEnabled":false,"downloadLanguage":"python","cppStatus":"true","cpp":"// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START V5 MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END V5 MACROS\n\n\n// Robot configuration code.\nmotor Lmotor = motor(PORT10, ratio18_1, false);\n\nmotor Rmotor = motor(PORT1, ratio18_1, true);\n\ncontroller Controller1 = controller(primary);\n\n\n\n\n\n// Helper to make playing sounds from the V5 in VEXcode easier and\n// keeps the code cleaner by making it clear what is happening.\nvoid playVexcodeSound(const char *soundName) {\n  printf(\"VEXPlaySound:%s\\n\", soundName);\n  wait(5, msec);\n}\n\n\n\n// Generated code.\n\n\n\n// define variable for remote controller enable/disable\nbool RemoteControlCodeEnabled = true;\n\n\n\n// Include the V5 Library\n#include \"vex.h\"\n  \n// Allows for easier use of the VEX Library\nusing namespace vex;\n\ncompetition Competition;\n\nint Brain_precision = 0, Console_precision = 0, Controller1_precision = 0;\n\nfloat myVariable;\n\n// \"when started\" hat block\nint whenStarted1() {\n  RemoteControlCodeEnabled = false;\n  Brain.Screen.setCursor(1, 1);\n  Brain.Screen.print(\"Program STARTED\");\n  Brain.Screen.newLine();\n  Brain.Screen.print(\"Waiting for FIELD control\");\n  Lmotor.setStopping(coast);\n  Lmotor.setStopping(coast);\n  return 0;\n}\n\n// \"when autonomous\" hat block\nint onauton_autonomous_0() {\n  RemoteControlCodeEnabled = false;\n  Brain.Screen.setCursor(4, 1);\n  Brain.Screen.print(\"Enabled AUTONOMOUS mode\");\n  return 0;\n}\n\n// \"when driver control\" hat block\nint ondriver_drivercontrol_0() {\n  RemoteControlCodeEnabled = true;\n  Brain.Screen.setCursor(3, 1);\n  Brain.Screen.print(\"Enabled DRIVER mode\");\n  while (true) {\n    Lmotor.setVelocity(Controller1.Axis3.position(), percent);\n    Rmotor.setVelocity(Controller1.Axis2.position(), percent);\n    Lmotor.spin(forward);\n    Rmotor.spin(forward);\n  wait(5, msec);\n  }\n  return 0;\n}\n\nvoid VEXcode_driver_task() {\n  // Start the driver control tasks....\n  vex::task drive0(ondriver_drivercontrol_0);\n  while(Competition.isDriverControl() && Competition.isEnabled()) {this_thread::sleep_for(10);}\n  drive0.stop();\n  return;\n}\n\nvoid VEXcode_auton_task() {\n  // Start the auton control tasks....\n  vex::task auto0(onauton_autonomous_0);\n  while(Competition.isAutonomous() && Competition.isEnabled()) {this_thread::sleep_for(10);}\n  auto0.stop();\n  return;\n}\n\n\n\nint main() {\n  vex::competition::bStopTasksBetweenModes = false;\n  Competition.autonomous(VEXcode_auton_task);\n  Competition.drivercontrol(VEXcode_driver_task);\n\n  // post event registration\n\n  // set default print color to black\n  printf(\"\\033[30m\");\n\n  // wait for rotation sensor to fully initialize\n  wait(30, msec);\n\n  whenStarted1();\n}","target":"Physical"}